git:
  quiet: true
addons:
  chrome: stable
  artifacts:
    paths:
      - $(ls test/.tmp/diff/*.png | tr "\n" ":")
# Leave node_js version blank to
# use version in `.nvmrc`
language: node_js
dist: xenial
node_js:
cache:
  directories:
    - node_modules
env:
  - TEST_SUITE=e2e-group0
  - TEST_SUITE=e2e-group1
  - TEST_SUITE=e2e-group2
  - TEST_SUITE=e2e-group3
  - TEST_SUITE=functional
  - TEST_SUITE=lint
install:
  - npm install -g grunt-cli
  - npm install
before_script:
  - export TZ=America/New_York
  - google-chrome --version
  - if [ $TEST_SUITE != lint ]; then npm run build; fi
script:
  # Run non-e2e tests
  - if [ $TEST_SUITE = lint  ]; then npm run lint:ci; fi
  - if [ $TEST_SUITE = functional  ]; then npm run functional:ci; fi
  # e2e non-Cron tests
  - if [ $TEST_SUITE = e2e-group0 ] && [ $TRAVIS_EVENT_TYPE != cron ]; then (npm run quickstart &) && sleep 5; fi
  - if [ $TEST_SUITE = e2e-group0 ] && [ $TRAVIS_EVENT_TYPE != cron ]; then npm run e2e:group0:ci; fi
  - if [ $TEST_SUITE = e2e-group0 ] && [ $TRAVIS_EVENT_TYPE != cron ]; then npm run stop; fi
  - if [ $TEST_SUITE = e2e-group1 ] && [ $TRAVIS_EVENT_TYPE != cron ]; then (npm run quickstart &) && sleep 5; fi
  - if [ $TEST_SUITE = e2e-group1 ] && [ $TRAVIS_EVENT_TYPE != cron ]; then npm run e2e:group1:ci; fi
  - if [ $TEST_SUITE = e2e-group1 ] && [ $TRAVIS_EVENT_TYPE != cron ]; then npm run stop; fi
  - if [ $TEST_SUITE = e2e-group2 ] && [ $TRAVIS_EVENT_TYPE != cron ]; then (npm run quickstart &) && sleep 5; fi
  - if [ $TEST_SUITE = e2e-group2 ] && [ $TRAVIS_EVENT_TYPE != cron ]; then npm run e2e:group2:ci; fi
  - if [ $TEST_SUITE = e2e-group2 ] && [ $TRAVIS_EVENT_TYPE != cron ]; then npm run stop; fi
  - if [ $TEST_SUITE = e2e-group3 ] && [ $TRAVIS_EVENT_TYPE != cron ]; then (npm run quickstart &) && sleep 5; fi
  - if [ $TEST_SUITE = e2e-group3 ] && [ $TRAVIS_EVENT_TYPE != cron ]; then npm run e2e:group3:ci; fi
  - if [ $TEST_SUITE = e2e-group3 ] && [ $TRAVIS_EVENT_TYPE != cron ]; then npm run stop; fi
  # e2e Cron test (browserstack)
  - if [ $TEST_SUITE = e2e-group0 ] && [ $TRAVIS_EVENT_TYPE = cron ]; then (npm run quickstart &) && sleep 5; fi
  - if [ $TEST_SUITE = e2e-group0 ] && [ $TRAVIS_EVENT_TYPE = cron ]; then npm run e2e:group0:ci:bs; fi
  - if [ $TEST_SUITE = e2e-group0 ] && [ $TRAVIS_EVENT_TYPE = cron ]; then npm run stop; fi
  - if [ $TEST_SUITE = e2e-group1 ] && [ $TRAVIS_EVENT_TYPE = cron ]; then (npm run quickstart &) && sleep 5; fi
  - if [ $TEST_SUITE = e2e-group1 ] && [ $TRAVIS_EVENT_TYPE = cron ]; then npm run e2e:group1:ci:bs; fi
  - if [ $TEST_SUITE = e2e-group1 ] && [ $TRAVIS_EVENT_TYPE = cron ]; then npm run stop; fi
  - if [ $TEST_SUITE = e2e-group2 ] && [ $TRAVIS_EVENT_TYPE = cron ]; then (npm run quickstart &) && sleep 5; fi
  - if [ $TEST_SUITE = e2e-group2 ] && [ $TRAVIS_EVENT_TYPE = cron ]; then npm run e2e:group2:ci:bs; fi
  - if [ $TEST_SUITE = e2e-group2 ] && [ $TRAVIS_EVENT_TYPE = cron ]; then npm run stop; fi
  - if [ $TEST_SUITE = e2e-group3 ] && [ $TRAVIS_EVENT_TYPE = cron ]; then (npm run quickstart &) && sleep 5; fi
  - if [ $TEST_SUITE = e2e-group3 ] && [ $TRAVIS_EVENT_TYPE = cron ]; then npm run e2e:group3:ci:bs; fi
  - if [ $TEST_SUITE = e2e-group3 ] && [ $TRAVIS_EVENT_TYPE = cron ]; then npm run stop; fi
jobs:
  include:
    - stage: deploy
      env: TEST_SUITE=e2e-group3
      before_install: skip
      install: skip
      script: skip
      deploy:
          # DEPLOY BUILD TO DEMO SERVER
          # this runs conditionally `on`
          # "push" events to "master" branch
        - provider: script
          script: ./scripts/jenkins-deploy.sh -b master -w
          skip_cleanup: true
          on:
            condition: $TRAVIS_EVENT_TYPE = push
            branch: master
          # NPM PUBLISH NIGHTLY DEV BUILD
          # this runs conditionally on "cron" events
          # and uses default branch "master"
        - provider: script
          script: ./scripts/publish-nightly.sh
          skip_cleanup: true
          on:
            condition: $TRAVIS_EVENT_TYPE = cron

# Specify stage(s) order and conditionals per stage
stages:
  - test
  - name: deploy
    # do not run the deploy stage for Pull Request checks
    # and require the branch name to be master (note for PRs this is the base branch name)
    if: NOT type IN (pull_request) AND branch = master
